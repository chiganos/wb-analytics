import pandas as pd
import sqlite3
import plotly.graph_objects as go
from fastapi.responses import HTMLResponse

def analyze_sma(db_path, article):
    try:
        conn = sqlite3.connect(db_path)
        query = f"SELECT date, orders FROM funnel WHERE article = '{article}'"
        df = pd.read_sql(query, conn)
        conn.close()

        if df.empty:
            return HTMLResponse("<h2>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</h2>", status_code=200)

        df['date'] = pd.to_datetime(df['date'])
        df = df.sort_values('date')

        # –°–∫–æ–ª—å–∑—è—â–∞—è —Å—Ä–µ–¥–Ω—è—è
        df['sma'] = df['orders'].rolling(window=7, min_periods=1).mean()

        # –†–∞—Å—á—ë—Ç –ø—Ä–∏—Ä–æ—Å—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π vs –ø—Ä–µ–¥—ã–¥—É—â–∏–µ 7
        last_7 = df[df["date"] >= df["date"].max() - pd.Timedelta(days=6)]["orders"].sum()
        prev_7 = df[(df["date"] < df["date"].max() - pd.Timedelta(days=6)) & (df["date"] >= df["date"].max() - pd.Timedelta(days=13))]["orders"].sum()

        if pd.isna(prev_7) or prev_7 == 0:
            growth = float("inf")
        else:
            growth = (last_7 - prev_7) / prev_7 * 100

        growth_str = f"{growth:.1f}%" if growth != float("inf") else "‚àû"

        summary_html = f"""
        <h3>üìÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤</h3>
        <ul>
          <li>–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π: <b>{last_7}</b> –∑–∞–∫–∞–∑–æ–≤</li>
          <li>–ù–µ–¥–µ–ª–µ–π —Ä–∞–Ω–µ–µ: <b>{prev_7}</b> –∑–∞–∫–∞–∑–æ–≤</li>
          <li>üìä –ü—Ä–∏—Ä–æ—Å—Ç: <b>{growth_str}</b></li>
        </ul>
        """

        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —á–µ—Ä–µ–∑ Plotly
        fig = go.Figure()
        fig.add_trace(go.Scatter(x=df['date'], y=df['orders'], mode='lines+markers', name='–ü—Ä–æ–¥–∞–∂–∏'))
        fig.add_trace(go.Scatter(x=df['date'], y=df['sma'], mode='lines', name='7-–¥–Ω–µ–≤–Ω–æ–µ —Å–∫–æ–ª—å–∑—è—â–µ–µ —Å—Ä–µ–¥–Ω–µ–µ'))

        fig.update_layout(
            title=f"SMA –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É {article}",
            xaxis_title="–î–∞—Ç–∞",
            yaxis_title="–ü—Ä–æ–¥–∞–∂–∏",
            hovermode="x unified"
        )

        html = summary_html + fig.to_html(full_html=False, include_plotlyjs='cdn')
        return HTMLResponse(content=html)

    except Exception as e:
        return HTMLResponse(content=f"<h2>–û—à–∏–±–∫–∞: {str(e)}</h2>", status_code=500)