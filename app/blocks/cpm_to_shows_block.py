import sqlite3
import pandas as pd
import plotly.graph_objects as go
from fastapi.responses import HTMLResponse

def analyze_cpm_vs_shows(db_path: str, article: str):
    conn = sqlite3.connect(db_path)
    ads = pd.read_sql("SELECT * FROM ads WHERE article = ?", conn, params=(article,))
    calculated = pd.read_sql("SELECT * FROM calculated WHERE article = ?", conn, params=(article,))
    conn.close()

    if ads.empty or calculated.empty:
        return HTMLResponse("<p>‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.</p>")

    ads["date"] = pd.to_datetime(ads["date"])
    calculated["date"] = pd.to_datetime(calculated["date"])

    merged = pd.merge(ads, calculated[["date", "CPM"]], on="date", how="inner")

    if merged.empty or merged["shows"].sum() == 0:
        return HTMLResponse("<p>‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π –ø–æ –¥–∞—Ç–µ –º–µ–∂–¥—É ads –∏ calculated.</p>")

    correlation = merged["CPM"].corr(merged["shows"])

    fig = go.Figure()
    fig.add_trace(go.Scatter(
        x=merged["date"],
        y=merged["CPM"],
        name="CPM",
        mode="lines+markers",
        line=dict(color="red")
    ))
    fig.add_trace(go.Scatter(
        x=merged["date"],
        y=merged["shows"],
        name="–ü–æ–∫–∞–∑—ã",
        mode="lines+markers",
        yaxis="y2",
        line=dict(color="blue")
    ))

    fig.update_layout(
        title=f"–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å CPM –æ—Ç –ø–æ–∫–∞–∑–æ–≤ / –∞—Ä—Ç–∏–∫—É–ª {article}",
        xaxis_title="–î–∞—Ç–∞",
        yaxis=dict(title=dict(text="CPM", font=dict(color="red")), tickfont=dict(color="red")),
        yaxis2=dict(title=dict(text="–ü–æ–∫–∞–∑—ã", font=dict(color="blue")), tickfont=dict(color="blue"), overlaying="y", side="right"),
        legend=dict(x=0.01, y=0.99),
        hovermode="x unified"
    )

    comment = ""
    if correlation > 0.5:
        comment = "‚úÖ –°–∏–ª—å–Ω–∞—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å ‚Äî –ø—Ä–∏ —Ä–æ—Å—Ç–µ –ø–æ–∫–∞–∑–æ–≤ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è CPM"
    elif correlation < -0.5:
        comment = "üîª –°–∏–ª—å–Ω–∞—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å ‚Äî CPM –ø–∞–¥–∞–µ—Ç –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –ø–æ–∫–∞–∑–æ–≤"
    else:
        comment = "üü° –°–≤—è–∑—å —Å–ª–∞–±–∞—è –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

    summary = f"<p>üìà <b>–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è CPM –∏ –ø–æ–∫–∞–∑–æ–≤:</b> {round(correlation, 2)}</p><p>{comment}</p>"

    return HTMLResponse(content=summary + fig.to_html(full_html=False, include_plotlyjs='cdn'))
