import sqlite3
import pandas as pd
import plotly.graph_objects as go
from fastapi.responses import HTMLResponse

def analyze_price_vs_orders(db_path: str, article: str):
    try:
        conn = sqlite3.connect(db_path)
        query = f"SELECT date, price, orders FROM funnel WHERE article = '{article}'"
        df = pd.read_sql(query, conn)
        conn.close()

        if df.empty:
            return HTMLResponse("<p>‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É.</p>", status_code=200)

        # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
        df["orders"] = pd.to_numeric(df["orders"], errors="coerce")
        df["price"] = pd.to_numeric(df["price"], errors="coerce")
        df["date"] = pd.to_datetime(df["date"])

        df = df[["date", "price", "orders"]].dropna()
        df = df[df["orders"] > 0]
        df = df.sort_values("date")

        if len(df) < 3:
            return HTMLResponse("<p>‚ùó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–º–µ–Ω–µ–µ 3 —Å—Ç—Ä–æ–∫ —Å –∑–∞–∫–∞–∑–∞–º–∏).</p>", status_code=200)

        corr = round(df["price"].corr(df["orders"]), 2)

        if corr < -0.6:
            comment = "üîª <b>–°–∏–ª—å–Ω–∞—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å</b> ‚Äî —Å–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Ä–æ—Å—Ç—É –∑–∞–∫–∞–∑–æ–≤"
        elif corr < -0.3:
            comment = "üü† <b>–£–º–µ—Ä–µ–Ω–Ω–∞—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å</b> ‚Äî —Ü–µ–Ω–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –∑–∞–∫–∞–∑—ã"
        elif corr < -0.1:
            comment = "‚ö†Ô∏è <b>–°–ª–∞–±–∞—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å</b> ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ –≤–ª–∏—è–Ω–∏–µ, –Ω–æ —Å–ª–∞–±–æ–µ"
        else:
            comment = "‚ö™ <b>–°–≤—è–∑—å –ø–æ—á—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b> ‚Äî —Ü–µ–Ω–∞ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –∑–∞–∫–∞–∑—ã"

        # –ì—Ä–∞—Ñ–∏–∫ —Å –¥–≤—É–º—è Y-–æ—Å—è–º–∏
        fig = go.Figure()

        # –õ–µ–≤–∞—è –æ—Å—å Y ‚Äî –∑–∞–∫–∞–∑—ã
        fig.add_trace(go.Scatter(
            x=df["date"], y=df["orders"],
            name="–ó–∞–∫–∞–∑—ã", mode="lines+markers", line=dict(color="red"),
            yaxis="y1"
        ))

        # –ü—Ä–∞–≤–∞—è –æ—Å—å Y ‚Äî —Ü–µ–Ω–∞
        fig.add_trace(go.Scatter(
            x=df["date"], y=df["price"],
            name="–¶–µ–Ω–∞", mode="lines+markers", line=dict(color="orange"),
            yaxis="y2"
        ))

        fig.update_layout(
            title="üìä –î–∏–Ω–∞–º–∏–∫–∞ —Ü–µ–Ω—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏",
            xaxis=dict(title="–î–∞—Ç–∞"),
            yaxis=dict(title="–ó–∞–∫–∞–∑—ã", side="left"),
            yaxis2=dict(title="–¶–µ–Ω–∞", overlaying="y", side="right"),
            height=400
        )

        html = f"""
        <h3>üì¶ –í–ª–∏—è–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤</h3>
        <p>üìà <b>–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É —Ü–µ–Ω–æ–π –∏ –∑–∞–∫–∞–∑–∞–º–∏:</b> {corr}</p>
        <p>{comment}</p>
        """

        return HTMLResponse(html + fig.to_html(include_plotlyjs=False, full_html=False), status_code=200)

    except Exception as e:
        return HTMLResponse(f"<p>‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}</p>", status_code=500)
